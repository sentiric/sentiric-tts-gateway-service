# docker-compose.dev.yml
# Service Geliştirme ortamı

networks:
  sentiric-net:
    name: "${NETWORK_NAME:-sentiric-net}"
    driver: bridge
    ipam:
      config:
        - subnet: ${NETWORK_SUBNET}
          gateway: ${NETWORK_GATEWAY}
  
# volumes:
  # [infra]: Temel Altyapı (Infrastructure Layer)
  # --------------------------------------------------

services:
  # [capability-tts]: Konuşma Sentezleme Yetenekleri (TTS Capabilities)
  # --------------------------------------------------  
  tts-gateway:
    build: { context: ../sentiric-tts-gateway-service }
    env_file: ["${ENV_FILE_PATH}"]
    volumes: 
      - "${CONFIG_REPO_PATH}:/sentiric-config:ro"
      - "${CERTIFICATES_REPO_PATH}:/sentiric-certificates:ro"
      - "${ASSETS_REPO_PATH}:/sentiric-assets:ro"
    ports: 
      - "14010:${TTS_GATEWAY_HTTP_PORT:-14010}"
      - "14011:${TTS_GATEWAY_GRPC_PORT:-14011}"
      - "14012:${TTS_GATEWAY_METRICS_PORT:-14012}"          
    networks:
      sentiric-net:
        ipv4_address: ${TTS_GATEWAY_IPV4_ADDRESS}
    dns:
      - ${PRIMARY_DNS:-8.8.8.8}
      - ${SECONDARY_DNS:-1.1.1.1}        
    restart: always
    # depends_on: {
    #    tts-edge-service: { condition: service_healthy }
    #   }
    # healthcheck:
    #   test: ["CMD", "nc", "-z", "localhost", "14011"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5
    #   start_period: 30s 