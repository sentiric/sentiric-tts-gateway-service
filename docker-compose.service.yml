# docker-compose.service.yml
# Service Geliştirme ortamı

networks:
  sentiric-net: { name: "${NETWORK_NAME:-sentiric-net}", driver: bridge }

volumes:
  postgres_data:
  rabbitmq_data:
  qdrant_data:
  redis_data:
  stt-model-cache:
  whatsapp_session:
  uptime-kuma-data:

services:
  # --- SES ORKESTRASYON KATMANI ---
  tts-edge-service:
    build: { context: ../sentiric-tts-edge-service }
    env_file: ["${ENV_FILE_PATH}"]
    ports: ["${TTS_EDGE_SERVICE_PORT:-5006}:5006"]
    networks: [sentiric-net]
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5006/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
      
  tts-gateway:
    build: { context: ../sentiric-tts-gateway-service }
    env_file: ["${ENV_FILE_PATH}"]
    volumes: ["${CONFIG_REPO_PATH}/tls/certs:/etc/sentiric/tls:ro"]
    ports: ["${TTS_GATEWAY_PORT:-50051}:50051"]
    networks: [sentiric-net]
    restart: always
    depends_on: { tts-edge-service: { condition: service_healthy } }
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "50051"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s